{"version":3,"sources":["logo.svg","components/AccountCard.js","components/Content.js","components/FacebookFeed.js","components/Login.js","components/PieGraph.js","components/SearchBar.js","components/SearchCompanies.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","minWidth","media","height","MediaCard","props","classes","company","Card","className","CardMedia","title","CardContent","Typography","gutterBottom","variant","component","name","color","grade","time","Content","useState","show","setShow","accounts","changeView","tab","width","Link","onClick","map","idx","PieGraph","SearchCompanies","action","Button","size","theme","maxWidth","marginTop","spacing","LongTextSnackbar","SnackbarContent","message","margin","Copyright","align","href","Date","getFullYear","Login","sign","username","setUser","password","setPass","noValidate","autoComplete","TextField","required","fullWidth","id","onChange","e","target","value","console","log","label","autoFocus","type","FormControlLabel","control","Checkbox","submit","Grid","container","item","xs","Box","mt","style","data","labels","datasets","backgroundColor","hoverBackgroundColor","options","responsive","maintainAspectRatio","SearchBar","elevation","padding","event","preventDefault","companies","companyList","setCompanies","searchTerm","a","filter","key","toLowerCase","indexOf","Sidebar","children","React","xPosition","setX","useEffect","Fragment","transform","minHeight","App","login","setLogin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7a15a732.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 180,\n  },\n  media: {\n    height: '10%',\n  },\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  const company = props.company;\n\n  return (\n    <Card className={classes.root}>\n      {/* <CardActionArea> */}\n        <CardMedia\n          className={classes.media}\n          title=\"Facebook Logo\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {company.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Grade: {company.grade}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Usage: {company.time} times in 24 hours\n          </Typography>\n        </CardContent>\n      {/* </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions> */}\n    </Card>\n  );\n}","import React, { useState } from 'react'\nimport { AccountCard, FacebookFeed, PieGraph, SearchCompanies, Sidebar } from '../components';\nimport { Link } from '@material-ui/core';\nimport './Content.css'\n\nexport default function Content(props) {\n    const [show, setShow] = useState(\"Dashboard\")\n    var accounts = [\n        {\n            name: \"Facebook\",\n            grade: \"D\",\n            time: \"200\"\n        },\n        {\n            name: \"Instagram\",\n            grade: \"C\",\n            time: \"164\"\n        },\n        {\n            name: \"Twitter\",\n            grade: \"B\",\n            time: \"374\"\n        },\n        {\n            name: \"Reddit\",\n            grade: \"C\",\n            time: \"193\"\n        }\n    ];\n\n    function changeView(tab) {\n        setShow(tab);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"side-container\">\n                <Sidebar width={300} height={\"100%\"}>\n                    <h2><Link onClick={() => changeView(\"Dashboard\")}>Dashboard</Link></h2>\n                    <h2><Link onClick={() => changeView(\"Accounts\")}>Accounts</Link></h2>\n                    {accounts.map((company, idx) => {\n                        return(\n                            <div>\n                                <a>{company.name}</a>\n                            </div>\n                        )\n                    })}\n                </Sidebar>\n            </div>\n            {show === \"Dashboard\" &&\n                <div className=\"body-container\">\n                    <div className=\"top-container\">\n                        {accounts.map((company, idx) => {\n                            return(\n                                <AccountCard className=\"item\" company={company}></AccountCard>\n                            )\n                        })}\n                    </div>\n                    <div className=\"bottom-container\">\n                        <PieGraph></PieGraph>\n                        <FacebookFeed></FacebookFeed>\n                    </div>\n                </div>}\n            {show === \"Accounts\" &&\n                <div className=\"body-container\">\n                    <div className=\"top-container\">  \n                    </div>\n                    <div className=\"bottom-container\">\n                        <SearchCompanies></SearchCompanies>\n                    </div>\n                </div>}\n        </div>\n    )\n}\n\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\nconst action = (\n  <Button color=\"primary\" size=\"small\">\n    More Information\n  </Button>\n);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nexport default function LongTextSnackbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <SnackbarContent\n        message=\"28/7 | Facebook: Your profile has been used for market sizing.\"\n        action={action}\n      />\n      <SnackbarContent\n        message=\"28/7 | Facebook: Your location has been used for geographic advertisements.\"\n        action={action}\n      />\n      <SnackbarContent\n        message=\"27/7 | Facebook: Your age has been used for product advertisements.\"\n        action={action}\n      />\n      <SnackbarContent\n        message=\"28/7 | Facebook: Your profile has been used for market sizing.\"\n        action={action}\n      />\n      <SnackbarContent\n        message=\"28/7 | Facebook: Your location has been used for geographic advertisements.\"\n        action={action}\n      />\n      <SnackbarContent\n        message=\"27/7 | Facebook: Your age has been used for product planning.\"\n        action={action}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport './Login.css'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    },\n    margin: \"3%\"\n  }\n}));\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nexport default function Login(props) {\n  const classes = useStyles();\n  const toggle = props.sign;\n  const [username, setUser] = useState('');\n  const [password, setPass] = useState('');\n\n  function checkSuccess(username, password) {\n    return true;\n  }\n\n  function updateUser(e) {\n    setUser(e.target.value);\n    console.log(\"user \" + username);\n  }\n\n  function updatePass(e) {\n    setPass(e.target.value);\n    console.log(\"pass \" + password);\n  }\n\n  function signIn() {\n    console.log(\"memez\");\n    if (checkSuccess(username, password)) {\n      console.log(\"memes\");\n      props.sign()\n    }\n  }\n\n  return (\n    <div className=\"login-container\">\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div className=\"login-items\">\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            onChange={updateUser}\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            onChange={updatePass}\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={signIn}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nexport default function PieGraph() {\n    const data = {\n        labels: [\n            'Red',\n            'Blue',\n            'Yellow'\n        ],\n        datasets: [{\n            data: [300, 50, 100],\n            backgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ]\n        }]\n    };\n\n    const options = {\n        width: '50%',\n        height: '40%',\n        responsive: true,\n        maintainAspectRatio: false,\n    }\n\n    return (\n        <div style={{ width: '60%', height: '100%' }}>\n            <h2>Doughnut Example</h2>\n            <Doughnut data={data} options={options}/>\n        </div>\n    );\n};","import React from 'react';\nimport { Grid, TextField } from '@material-ui/core';\n\nexport default function SearchBar(props) {\n    function handleChange(event) {\n        const { onChange } = props;\n        onChange(event.target.value);\n        event.preventDefault();\n    }\n\n    return (\n        <Grid elevation={6} style={{ padding: '10px' }}>\n            <TextField fullWidth label={props.label} onChange={handleChange} variant=\"outlined\" />\n        </Grid>\n    )\n}","import React, { useState } from 'react'\nimport { Table, TableRow, TableCell } from '@material-ui/core';\nimport { SearchBar } from '../components'\n\nexport default function SearchCompanies(props) {\n    // search bar\n    var companies = [\"Facebook\", \"Instagram\", \"Reddit\", \"Twitter\"]\n    const [companyList, setCompanies] = useState(companies)\n    async function handleChange(searchTerm) {\n        setCompanies(companies.filter((company, key) => {\n            if (company.toLowerCase().indexOf(searchTerm.toLowerCase()) === 0) {\n                return company;\n            }\n\n            return 0;\n        }));\n    };\n\n    return (\n        <div>\n            <SearchBar label=\"Search Companies\" onChange={handleChange} />\n            <div>\n                {companyList.map((company, idx) => {\n                    return(\n                        <p>{company}</p>\n                    );\n                })}\n            </div>\n        </div>\n    )\n}","import \"./Sidebar.css\";\nimport React from \"react\";\n\nexport default function Sidebar({ width, height, children }) {\n    const [xPosition, setX] = React.useState(-width);\n\n    /* const toggleMenu = () => {\n        if (xPosition < 0) {\n            setX(0);\n        } else {\n            setX(-width);\n        }\n    }; */\n\n    React.useEffect(() => {\n        setX(0);\n    }, []);\n    return (\n        <React.Fragment>\n            <div\n                className=\"side-bar\"\n                style={{\n                    transform: `translatex(${xPosition}px)`,\n                    width: width,\n                    minHeight: '100%'\n                }}\n            >\n                {/* <button\n                    onClick={() => toggleMenu()}\n                    className=\"toggle-menu\"\n                    style={{\n                        transform: `translate(${width}px, 20vh)`\n                    }}\n                ></button> */}\n                <div className=\"content\">{children}</div>\n            </div>\n        </React.Fragment>\n    );\n};","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Content, Login, SearchCompanies } from './components'\n\nfunction App() {\n  const [login, setLogin] = useState(false);\n  function toggleOverlay() {\n    setLogin(!login);\n  }\n  return (\n    <div className=\"App\">\n      <Content></Content>\n      { !login &&\n      <div className=\"overlay\">\n          <Login sign={toggleOverlay} ></Login>\n      </div> }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}